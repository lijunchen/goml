package main

import (
    "fmt"
)

func unit_to_string(x struct{}) string {
    return "()"
}

func bool_to_string(x bool) string {
    if x {
        return "true"
    } else {
        return "false"
    }
}

func int_to_string(x int) string {
    return fmt.Sprintf("%d", x)
}

func int_add(x int, y int) int {
    return x + y
}

func int_sub(x int, y int) int {
    return x - y
}

func int_less(x int, y int) bool {
    return x < y
}

func string_print(s string) struct{} {
    fmt.Print(s)
    return struct{}{}
}

func string_println(s string) struct{} {
    fmt.Println(s)
    return struct{}{}
}

func missing(s string) struct{} {
    panic("missing: " + s)
    return struct{}{}
}

type T interface {
    isT()
}

type A struct {}

func (_ A) isT() {}

type B struct {
    _0 bool
    _1 bool
}

func (_ B) isT() {}

func test(t__0 T) struct{} {
    switch t__0.(type) {
    case A:
        var t6 string = int_to_string(1)
        return string_print(t6)
    case B:
        var x0 bool = t__0.(B)._0
        var x1 bool = t__0.(B)._1
        switch x1 {
        case true:
            switch x0 {
            case true:
                var t7 string = int_to_string(4)
                return string_print(t7)
            case false:
                var t8 string = int_to_string(3)
                return string_print(t8)
            }
        case false:
            switch x0 {
            case true:
                var t9 string = int_to_string(4)
                return string_print(t9)
            case false:
                var t10 string = int_to_string(2)
                return string_print(t10)
            }
        }
    }
}

func main0() struct{} {
    var t11 T = B{
        _0: true,
        _1: true,
    }
    var mtmp2 struct{} = test(t11)
    var t12 T = B{
        _0: false,
        _1: true,
    }
    var mtmp3 struct{} = test(t12)
    var t13 T = B{
        _0: false,
        _1: false,
    }
    var mtmp4 struct{} = test(t13)
    var t14 T = A{}
    var mtmp5 struct{} = test(t14)
    return struct{}{}
}

func main() {
    main0()
}
