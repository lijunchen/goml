package main

import (
    "fmt"
)

func unit_to_string(x struct{}) string {
    return "()"
}

func bool_to_string(x bool) string {
    if x {
        return "true"
    } else {
        return "false"
    }
}

func int_to_string(x int) string {
    return fmt.Sprintf("%d", x)
}

func int_add(x int, y int) int {
    return x + y
}

func int_sub(x int, y int) int {
    return x - y
}

func int_less(x int, y int) bool {
    return x < y
}

func string_print(s string) struct{} {
    fmt.Print(s)
    return struct{}{}
}

func string_println(s string) struct{} {
    fmt.Println(s)
    return struct{}{}
}

func missing(s string) struct{} {
    panic("missing: " + s)
    return struct{}{}
}

type Tuple2_bool_bool struct {
    _0 bool
    _1 bool
}

func main0() struct{} {
    var a__0 Tuple2_bool_bool = Tuple2_bool_bool{
        _0: true,
        _1: false,
    }
    var x0 bool = a__0._0
    var x1 bool = a__0._1
    var mtmp2 struct{}
    switch x0 {
    case true:
        var b__1 bool
        b__1 = x1
        var t5 string
        t5 = bool_to_string(b__1)
        mtmp2 = string_print(t5)
    case false:
        mtmp2 = struct{}{}
    }
    var c__2 Tuple2_bool_bool = Tuple2_bool_bool{
        _0: true,
        _1: true,
    }
    var x3 bool = c__2._0
    var x4 bool = c__2._1
    switch x3 {
    case true:
        var d__3 bool = x4
        var t6 string = bool_to_string(d__3)
        return string_print(t6)
    case false:
        return struct{}{}
    }
}

func main() {
    main0()
}
