package main

import (
    "fmt"
)

func unit_to_string(x struct{}) string {
    return "()"
}

func bool_to_string(x bool) string {
    if x {
        return "true"
    } else {
        return "false"
    }
}

func int_to_string(x int) string {
    return fmt.Sprintf("%d", x)
}

func int_add(x int, y int) int {
    return x + y
}

func int_sub(x int, y int) int {
    return x - y
}

func int_less(x int, y int) bool {
    return x < y
}

func string_add(a string, b string) string {
    return a + b
}

func string_print(s string) struct{} {
    fmt.Print(s)
    return struct{}{}
}

func string_println(s string) struct{} {
    fmt.Println(s)
    return struct{}{}
}

func missing(s string) struct{} {
    panic("missing: " + s)
    return struct{}{}
}

type Point struct {
    x int
    y int
}

type Line struct {
    from Point
    to Point
    color Color
}

type Color interface {
    isColor()
}

type Red struct {}

func (_ Red) isColor() {}

type Green struct {}

func (_ Green) isColor() {}

type Blue struct {}

func (_ Blue) isColor() {}

func point_to_string(p__0 Point) string {
    var ret22 string
    var mtmp0 Point = p__0
    var x1 int = mtmp0.x
    var x2 int = mtmp0.y
    var y__2 int = x2
    var x__1 int = x1
    var t8 string = int_to_string(x__1)
    var t11 string = int_to_string(y__2)
    var t10 string = string_add(t11, " }")
    var t9 string = string_add(", y: ", t10)
    var t7 string = string_add(t8, t9)
    ret22 = string_add("Point { x: ", t7)
    return ret22
}

func color_to_string(c__3 Color) string {
    var ret23 string
    switch c__3.(type) {
    case Red:
        ret23 = "Red"
    case Green:
        ret23 = "Green"
    case Blue:
        ret23 = "Blue"
    }
    return ret23
}

func line_to_string(l__4 Line) string {
    var ret24 string
    var mtmp3 Line = l__4
    var x4 Point = mtmp3.from
    var x5 Point = mtmp3.to
    var x6 Color = mtmp3.color
    var color__7 Color = x6
    var to__6 Point = x5
    var from__5 Point = x4
    var t13 string = point_to_string(from__5)
    var t16 string = point_to_string(to__6)
    var t19 string = color_to_string(color__7)
    var t18 string = string_add(t19, " }")
    var t17 string = string_add(", color: ", t18)
    var t15 string = string_add(t16, t17)
    var t14 string = string_add(", to: ", t15)
    var t12 string = string_add(t13, t14)
    ret24 = string_add("Line { from: ", t12)
    return ret24
}

func main0() struct{} {
    var ret25 struct{}
    var p0__8 Point = Point{
        x: 0,
        y: 0,
    }
    var p1__9 Point = Point{
        x: 10,
        y: 10,
    }
    var t20 Color = Red{}
    var line__10 Line = Line{
        from: p0__8,
        to: p1__9,
        color: t20,
    }
    var t21 string = line_to_string(line__10)
    ret25 = string_println(t21)
    return ret25
}

func main() {
    main0()
}
