impl Arith for int{
  fn add(self/0: int, other/1: int) -> int {
    (self/0 : int) + (other/1 : int)
  }
  fn less(self/2: int, other/3: int) -> bool {
    int_less((self/2 : int), (other/3 : int))
  }
}

impl ToString for int{
  fn to_string(self/4: int) -> string {
    int_to_string((self/4 : int))
  }
}

impl ToString for bool{
  fn to_string(self/5: bool) -> string {
    bool_to_string((self/5 : bool))
  }
}

impl Output for int{
  fn output(self/6: int) -> unit {
    string_println(to_string((self/6 : int)))
  }
}

impl Output for bool{
  fn output(self/7: bool) -> unit {
    string_println(to_string((self/7 : bool)))
  }
}

fn id(x/8: T) -> T {
  (x/8 : T)
}

fn main() -> unit {
  let a/9: int = id(1) in
  let b/10: int = id(2) in
  let c/11: int = add((a/9 : int), (b/10 : int)) in
  let _ : unit = output((c/11 : int)) in
  let a/12: int = id(3) in
  let b/13: int = id(4) in
  let c/14: bool = less((a/12 : int), (b/13 : int)) in
  let _ : unit = output((c/14 : bool)) in
  let _ : string = id("abc") in
  let _ : bool = id(true) in
  ()
}