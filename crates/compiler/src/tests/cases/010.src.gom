package main

import (
    "fmt"
)

func unit_to_string(x struct{}) string {
    return "()"
}

func bool_to_string(x bool) string {
    if x {
        return "true"
    } else {
        return "false"
    }
}

func int_to_string(x int) string {
    return fmt.Sprintf("%d", x)
}

func int_neg(x int) int {
    return -x
}

func int_add(x int, y int) int {
    return x + y
}

func int_sub(x int, y int) int {
    return x - y
}

func int_mul(x int, y int) int {
    return x * y
}

func int_div(x int, y int) int {
    return x / y
}

func int_less(x int, y int) bool {
    return x < y
}

func string_add(a string, b string) string {
    return a + b
}

func string_print(s string) struct{} {
    fmt.Print(s)
    return struct{}{}
}

func string_println(s string) struct{} {
    fmt.Println(s)
    return struct{}{}
}

func missing(s string) struct{} {
    println("missing: " + s)
    panic("")
    return struct{}{}
}

type Tuple2_bool_bool struct {
    _0 bool
    _1 bool
}

func main0() struct{} {
    var ret6 struct{}
    var a__0 Tuple2_bool_bool = Tuple2_bool_bool{
        _0: true,
        _1: true,
    }
    var x0 bool = a__0._0
    var x1 bool = a__0._1
    switch x1 {
    case true:
        switch x0 {
        case true:
            var t2 string = int_to_string(789)
            ret6 = string_print(t2)
        case false:
            var t3 string = int_to_string(456)
            ret6 = string_print(t3)
        }
    case false:
        switch x0 {
        case true:
            var t4 string = int_to_string(123)
            ret6 = string_print(t4)
        case false:
            var t5 string = int_to_string(789)
            ret6 = string_print(t5)
        }
    }
    return ret6
}

func main() {
    main0()
}
