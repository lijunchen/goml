fn test (t:T) -> Unit {
  match t {
    T::A => {
      print_int(1)
    },
    T::B(x0,x1) => {
      let x1 = T_1_1(t) in
      let x0 = T_1_0(t) in
      match x1 {
        true => {
          match x0 {
            true => {
              print_int(4)
            },
            false => {
              print_int(3)
            },
          }
        },
        false => {
          match x0 {
            true => {
              print_int(4)
            },
            false => {
              print_int(2)
            },
          }
        },
      }
    },
  }
}

fn main () -> Unit {
  let mtmp2 = test(T::B(true,true)) in
  let mtmp3 = test(T::B(false,true)) in
  let mtmp4 = test(T::B(false,false)) in
  let mtmp5 = test(T::A) in
  ()
}