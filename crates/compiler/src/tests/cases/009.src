enum T {
    A,
    B(bool, bool),
}

fn test(t: T) -> unit {
    match t {
        A => string_print(int_to_string(1)),
        B(false, false) => string_print(int_to_string(2)),
        B(false, true) => string_print(int_to_string(3)),
        _ => string_print(int_to_string(4)),
    }
}

fn main() {
    let _ = test(B(true, true)) in
    let _ = test(B(false, true)) in
    let _ = test(B(false, false)) in
    let _ = test(A) in
    ()
}
