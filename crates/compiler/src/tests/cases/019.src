struct Point {
    x: Int,
    y: Int,
}

struct Wrapper[T] {
    value: T,
}

fn takes_point(p: Point) -> Int {
    0
}

fn id_wrapper_int(value: Wrapper[Int]) -> Wrapper[Int] {
    value
}

fn takes_wrapper_unit(value: Wrapper[Unit]) -> Unit {
    ()
}

fn main() {
    let _ = string_println("structs!") in
    ()
}
