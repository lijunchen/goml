fn test_nested_match(x: (Bool, Bool), y: (Bool, Bool)) {
  match x {
    (true, false) => 
      match y {
        (false, true) => string_println("case1"),
        _ => string_println("case2"),
      },
    _ => 
      match y {
        (false, true) => string_println("case3"),
        _ => string_println("case4"),
      },
  }
}



fn main() {
  let _ = test_nested_match((true, false), (false, true)) in
  let _ = test_nested_match((true, false), (true, false)) in
  let _ = test_nested_match((false, true), (false, true)) in
  let _ = test_nested_match((false, true), (true, false)) in
  ()
}
