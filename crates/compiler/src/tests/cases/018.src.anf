fn impl_Arith_int_add(self/0: int, other/1: int) -> int {
  int_add(self/0, other/1)
}

fn impl_Arith_int_less(self/2: int, other/3: int) -> bool {
  int_less(self/2, other/3)
}

fn impl_ToString_int_to_string(self/4: int) -> string {
  int_to_string(self/4)
}

fn impl_ToString_bool_to_string(self/5: bool) -> string {
  bool_to_string(self/5)
}

fn impl_Output_int_output(self/6: int) -> unit {
  let t4 = impl_ToString_int_to_string(self/6) in
  string_println(t4)
}

fn impl_Output_bool_output(self/7: bool) -> unit {
  let t5 = impl_ToString_bool_to_string(self/7) in
  string_println(t5)
}

fn main() -> unit {
  let a/9 = id__T_int(1) in
  let b/10 = id__T_int(2) in
  let c/11 = impl_Arith_int_add(a/9, b/10) in
  let mtmp0 = impl_Output_int_output(c/11) in
  let a/12 = id__T_int(3) in
  let b/13 = id__T_int(4) in
  let c/14 = impl_Arith_int_less(a/12, b/13) in
  let mtmp1 = impl_Output_bool_output(c/14) in
  let mtmp2 = id__T_string("abc") in
  let mtmp3 = id__T_bool(true) in
  ()
}

fn id__T_int(x/8: int) -> int {
  x/8
}

fn id__T_string(x/8: string) -> string {
  x/8
}

fn id__T_bool(x/8: bool) -> bool {
  x/8
}