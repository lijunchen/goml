type Expr interface {
    isExpr()
}

type Zero struct {}

func (_ Zero) isExpr() {}

type Succ struct {
    _0 Expr
}

func (_ Succ) isExpr() {}

type Add struct {
    _0 Expr
    _1 Expr
}

func (_ Add) isExpr() {}

type Mul struct {
    _0 Expr
    _1 Expr
}

func (_ Mul) isExpr() {}

func main() {
    var t51 Expr = Zero{}
    var t52 Expr = Zero{}
    var t50 Expr = Add{
        _0: t51,
        _1: t52,
    }
    var t53 Expr = Zero{}
    var a__0 Expr = Mul{
        _0: t50,
        _1: t53,
    }
    switch _ := a__0.(type) {
    case Zero:
        var x__9 Expr = a__0
        var t54 string = int_to_string(6)
        return print(t54)
    case Succ:
        var x0 Expr = a__0.(Succ)._0
        var x__9 Expr = a__0
        var t55 string = int_to_string(6)
        return print(t55)
    case Add:
        var x1 Expr = a__0.(Add)._0
        var x2 Expr = a__0.(Add)._1
        switch _ := x2.(type) {
        case Zero:
            switch _ := x1.(type) {
            case Zero:
                var t56 string = int_to_string(0)
                return print(t56)
            case Succ:
                var x10 Expr = x1.(Succ)._0
                var x__2 Expr = x10
                var y__3 Expr = x2
                var t57 string = int_to_string(2)
                return print(t57)
            case Add:
                var x11 Expr = x1.(Add)._0
                var x12 Expr = x1.(Add)._1
                var x__8 Expr = x1
                var t58 string = int_to_string(5)
                return print(t58)
            case Mul:
                var x13 Expr = x1.(Mul)._0
                var x14 Expr = x1.(Mul)._1
                var x__8 Expr = x1
                var t59 string = int_to_string(5)
                return print(t59)
            }
        case Succ:
            var x5 Expr = x2.(Succ)._0
            switch _ := x1.(type) {
            case Zero:
                var x__9 Expr = a__0
                var t60 string = int_to_string(6)
                return print(t60)
            case Succ:
                var x15 Expr = x1.(Succ)._0
                var x__2 Expr = x15
                var y__3 Expr = x2
                var t61 string = int_to_string(2)
                return print(t61)
            case Add:
                var x16 Expr = x1.(Add)._0
                var x17 Expr = x1.(Add)._1
                var x__9 Expr = a__0
                var t62 string = int_to_string(6)
                return print(t62)
            case Mul:
                var x18 Expr = x1.(Mul)._0
                var x19 Expr = x1.(Mul)._1
                var x__9 Expr = a__0
                var t63 string = int_to_string(6)
                return print(t63)
            }
        case Add:
            var x6 Expr = x2.(Add)._0
            var x7 Expr = x2.(Add)._1
            switch _ := x1.(type) {
            case Zero:
                var x__9 Expr = a__0
                var t64 string = int_to_string(6)
                return print(t64)
            case Succ:
                var x20 Expr = x1.(Succ)._0
                var x__2 Expr = x20
                var y__3 Expr = x2
                var t65 string = int_to_string(2)
                return print(t65)
            case Add:
                var x21 Expr = x1.(Add)._0
                var x22 Expr = x1.(Add)._1
                var x__9 Expr = a__0
                var t66 string = int_to_string(6)
                return print(t66)
            case Mul:
                var x23 Expr = x1.(Mul)._0
                var x24 Expr = x1.(Mul)._1
                var x__9 Expr = a__0
                var t67 string = int_to_string(6)
                return print(t67)
            }
        case Mul:
            var x8 Expr = x2.(Mul)._0
            var x9 Expr = x2.(Mul)._1
            switch _ := x1.(type) {
            case Zero:
                var x__9 Expr = a__0
                var t68 string = int_to_string(6)
                return print(t68)
            case Succ:
                var x25 Expr = x1.(Succ)._0
                var x__2 Expr = x25
                var y__3 Expr = x2
                var t69 string = int_to_string(2)
                return print(t69)
            case Add:
                var x26 Expr = x1.(Add)._0
                var x27 Expr = x1.(Add)._1
                var x__9 Expr = a__0
                var t70 string = int_to_string(6)
                return print(t70)
            case Mul:
                var x28 Expr = x1.(Mul)._0
                var x29 Expr = x1.(Mul)._1
                var x__9 Expr = a__0
                var t71 string = int_to_string(6)
                return print(t71)
            }
        }
    case Mul:
        var x3 Expr = a__0.(Mul)._0
        var x4 Expr = a__0.(Mul)._1
        switch _ := x3.(type) {
        case Zero:
            var x__1 Expr = x4
            var t72 string = int_to_string(1)
            return print(t72)
        case Succ:
            var x30 Expr = x3.(Succ)._0
            switch _ := x4.(type) {
            case Zero:
                var x__4 Expr = x3
                var t73 string = int_to_string(3)
                return print(t73)
            case Succ:
                var x35 Expr = x4.(Succ)._0
                var x__9 Expr = a__0
                var t74 string = int_to_string(6)
                return print(t74)
            case Add:
                var x36 Expr = x4.(Add)._0
                var x37 Expr = x4.(Add)._1
                var x__9 Expr = a__0
                var t75 string = int_to_string(6)
                return print(t75)
            case Mul:
                var x38 Expr = x4.(Mul)._0
                var x39 Expr = x4.(Mul)._1
                var x__9 Expr = a__0
                var t76 string = int_to_string(6)
                return print(t76)
            }
        case Add:
            var x31 Expr = x3.(Add)._0
            var x32 Expr = x3.(Add)._1
            switch _ := x4.(type) {
            case Zero:
                var x__4 Expr = x3
                var t77 string = int_to_string(3)
                return print(t77)
            case Succ:
                var x40 Expr = x4.(Succ)._0
                var y__6 Expr = x32
                var x__5 Expr = x31
                var z__7 Expr = x4
                var t78 string = int_to_string(4)
                return print(t78)
            case Add:
                var x41 Expr = x4.(Add)._0
                var x42 Expr = x4.(Add)._1
                var y__6 Expr = x32
                var x__5 Expr = x31
                var z__7 Expr = x4
                var t79 string = int_to_string(4)
                return print(t79)
            case Mul:
                var x43 Expr = x4.(Mul)._0
                var x44 Expr = x4.(Mul)._1
                var y__6 Expr = x32
                var x__5 Expr = x31
                var z__7 Expr = x4
                var t80 string = int_to_string(4)
                return print(t80)
            }
        case Mul:
            var x33 Expr = x3.(Mul)._0
            var x34 Expr = x3.(Mul)._1
            switch _ := x4.(type) {
            case Zero:
                var x__4 Expr = x3
                var t81 string = int_to_string(3)
                return print(t81)
            case Succ:
                var x45 Expr = x4.(Succ)._0
                var x__9 Expr = a__0
                var t82 string = int_to_string(6)
                return print(t82)
            case Add:
                var x46 Expr = x4.(Add)._0
                var x47 Expr = x4.(Add)._1
                var x__9 Expr = a__0
                var t83 string = int_to_string(6)
                return print(t83)
            case Mul:
                var x48 Expr = x4.(Mul)._0
                var x49 Expr = x4.(Mul)._1
                var x__9 Expr = a__0
                var t84 string = int_to_string(6)
                return print(t84)
            }
        }
    }
}