fn match_int(n/0: Int) -> Int {
  match n/0 {
    0 => {
      10
    },
    1 => {
      20
    },
    _ => 30,
  }
}

fn wildcard_first(n/1: Int) -> Int {
  40
}

fn wildcard_middle(n/2: Int) -> Int {
  match n/2 {
    2 => {
      90
    },
    3 => {
      100
    },
    _ => 100,
  }
}

fn repeated(n/3: Int) -> Int {
  match n/3 {
    1 => {
      60
    },
    _ => 80,
  }
}

fn main() -> Unit {
  let t8 = match_int(0) in
  let t7 = int_to_string(t8) in
  let mtmp0 = string_println(t7) in
  let t10 = match_int(5) in
  let t9 = int_to_string(t10) in
  let mtmp1 = string_println(t9) in
  let t12 = wildcard_first(0) in
  let t11 = int_to_string(t12) in
  let mtmp2 = string_println(t11) in
  let t14 = wildcard_first(2) in
  let t13 = int_to_string(t14) in
  let mtmp3 = string_println(t13) in
  let t16 = wildcard_middle(2) in
  let t15 = int_to_string(t16) in
  let mtmp4 = string_println(t15) in
  let t18 = wildcard_middle(3) in
  let t17 = int_to_string(t18) in
  let mtmp5 = string_println(t17) in
  let t20 = repeated(1) in
  let t19 = int_to_string(t20) in
  let mtmp6 = string_println(t19) in
  let t22 = repeated(3) in
  let t21 = int_to_string(t22) in
  string_println(t21)
}