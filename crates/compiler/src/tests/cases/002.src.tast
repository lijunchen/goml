fn main() -> Unit {
  let a/0: (Bool, Bool) = (true, false) in
  let b/1: (Bool, Bool) = match (a/0 : (Bool, Bool)) {
      (false, false) => (true, true),
      (false, true) => (true, false),
      (true, false) => (false, true),
      (true, true) => (false, false),
  } in
  let b_1/3: Bool = match (b/1 : (Bool, Bool)) {
      (_ : Bool, w/2: Bool) => (w/2 : Bool),
  } in
  let c/4: Unit = match (true, (b_1/3 : Bool)) {
      (false, false) => string_print(int_to_string(0)),
      (false, true) => string_print(int_to_string(1)),
      (true, false) => string_print(int_to_string(2)),
      (true, true) => string_print(int_to_string(3)),
  } in
  string_print(unit_to_string((c/4 : Unit)))
}