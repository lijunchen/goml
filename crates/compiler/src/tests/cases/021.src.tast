fn match_int(n/0: Int) -> Int {
  match (n/0 : Int) {
      0 => 10,
      1 => 20,
      _ : Int => 30,
  }
}

fn wildcard_first(n/1: Int) -> Int {
  match (n/1 : Int) {
      _ : Int => 40,
      0 => 50,
  }
}

fn wildcard_middle(n/2: Int) -> Int {
  match (n/2 : Int) {
      2 => 90,
      _ : Int => 100,
      3 => 110,
  }
}

fn repeated(n/3: Int) -> Int {
  match (n/3 : Int) {
      1 => 60,
      1 => 70,
      _ : Int => 80,
  }
}

fn main() -> Unit {
  let _ : Unit = string_println(int_to_string(match_int(0))) in
  let _ : Unit = string_println(int_to_string(match_int(5))) in
  let _ : Unit = string_println(int_to_string(wildcard_first(0))) in
  let _ : Unit = string_println(int_to_string(wildcard_first(2))) in
  let _ : Unit = string_println(int_to_string(wildcard_middle(2))) in
  let _ : Unit = string_println(int_to_string(wildcard_middle(3))) in
  let _ : Unit = string_println(int_to_string(repeated(1))) in
  string_println(int_to_string(repeated(3)))
}