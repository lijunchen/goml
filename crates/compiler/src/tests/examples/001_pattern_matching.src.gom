package main

import (
    "fmt"
)

func unit_to_string(x struct{}) string {
    return "()"
}

func bool_to_string(x bool) string {
    if x {
        return "true"
    } else {
        return "false"
    }
}

func int_to_string(x int) string {
    return fmt.Sprintf("%d", x)
}

func int_add(x int, y int) int {
    return x + y
}

func int_sub(x int, y int) int {
    return x - y
}

func int_less(x int, y int) bool {
    return x < y
}

func string_add(a string, b string) string {
    return a + b
}

func string_print(s string) struct{} {
    fmt.Print(s)
    return struct{}{}
}

func string_println(s string) struct{} {
    fmt.Println(s)
    return struct{}{}
}

func missing(s string) struct{} {
    println("missing: " + s)
    panic("")
    return struct{}{}
}

type Expr interface {
    isExpr()
}

type Zero struct {}

func (_ Zero) isExpr() {}

type Succ struct {
    _0 Expr
}

func (_ Succ) isExpr() {}

type Add struct {
    _0 Expr
    _1 Expr
}

func (_ Add) isExpr() {}

type Mul struct {
    _0 Expr
    _1 Expr
}

func (_ Mul) isExpr() {}

func main0() struct{} {
    var ret85 struct{}
    var t51 Expr = Zero{}
    var t52 Expr = Zero{}
    var t50 Expr = Add{
        _0: t51,
        _1: t52,
    }
    var t53 Expr = Zero{}
    var a__0 Expr = Mul{
        _0: t50,
        _1: t53,
    }
    switch a__0 := a__0.(type) {
    case Zero:
        var t54 string = int_to_string(6)
        ret85 = string_print(t54)
    case Succ:
        var t55 string = int_to_string(6)
        ret85 = string_print(t55)
    case Add:
        var x1 Expr = a__0._0
        var x2 Expr = a__0._1
        switch x2.(type) {
        case Zero:
            switch x1.(type) {
            case Zero:
                var t56 string = int_to_string(0)
                ret85 = string_print(t56)
            case Succ:
                var t57 string = int_to_string(2)
                ret85 = string_print(t57)
            case Add:
                var t58 string = int_to_string(5)
                ret85 = string_print(t58)
            case Mul:
                var t59 string = int_to_string(5)
                ret85 = string_print(t59)
            }
        case Succ:
            switch x1.(type) {
            case Zero:
                var t60 string = int_to_string(6)
                ret85 = string_print(t60)
            case Succ:
                var t61 string = int_to_string(2)
                ret85 = string_print(t61)
            case Add:
                var t62 string = int_to_string(6)
                ret85 = string_print(t62)
            case Mul:
                var t63 string = int_to_string(6)
                ret85 = string_print(t63)
            }
        case Add:
            switch x1.(type) {
            case Zero:
                var t64 string = int_to_string(6)
                ret85 = string_print(t64)
            case Succ:
                var t65 string = int_to_string(2)
                ret85 = string_print(t65)
            case Add:
                var t66 string = int_to_string(6)
                ret85 = string_print(t66)
            case Mul:
                var t67 string = int_to_string(6)
                ret85 = string_print(t67)
            }
        case Mul:
            switch x1.(type) {
            case Zero:
                var t68 string = int_to_string(6)
                ret85 = string_print(t68)
            case Succ:
                var t69 string = int_to_string(2)
                ret85 = string_print(t69)
            case Add:
                var t70 string = int_to_string(6)
                ret85 = string_print(t70)
            case Mul:
                var t71 string = int_to_string(6)
                ret85 = string_print(t71)
            }
        }
    case Mul:
        var x3 Expr = a__0._0
        var x4 Expr = a__0._1
        switch x3.(type) {
        case Zero:
            var t72 string = int_to_string(1)
            ret85 = string_print(t72)
        case Succ:
            switch x4.(type) {
            case Zero:
                var t73 string = int_to_string(3)
                ret85 = string_print(t73)
            case Succ:
                var t74 string = int_to_string(6)
                ret85 = string_print(t74)
            case Add:
                var t75 string = int_to_string(6)
                ret85 = string_print(t75)
            case Mul:
                var t76 string = int_to_string(6)
                ret85 = string_print(t76)
            }
        case Add:
            switch x4.(type) {
            case Zero:
                var t77 string = int_to_string(3)
                ret85 = string_print(t77)
            case Succ:
                var t78 string = int_to_string(4)
                ret85 = string_print(t78)
            case Add:
                var t79 string = int_to_string(4)
                ret85 = string_print(t79)
            case Mul:
                var t80 string = int_to_string(4)
                ret85 = string_print(t80)
            }
        case Mul:
            switch x4.(type) {
            case Zero:
                var t81 string = int_to_string(3)
                ret85 = string_print(t81)
            case Succ:
                var t82 string = int_to_string(6)
                ret85 = string_print(t82)
            case Add:
                var t83 string = int_to_string(6)
                ret85 = string_print(t83)
            case Mul:
                var t84 string = int_to_string(6)
                ret85 = string_print(t84)
            }
        }
    }
    return ret85
}

func main() {
    main0()
}
