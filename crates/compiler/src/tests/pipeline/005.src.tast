fn main() -> unit {
  let a/0: (Color, Color) = (Color::Blue, Color::Red) in
  match (a/0 : (Color, Color)) {
      (Color::Red, Color::Green) => (string_print : (string) -> unit)((int_to_string : (int) -> string)(0)),
      (Color::Red, Color::Red) => (string_print : (string) -> unit)((int_to_string : (int) -> string)(1)),
      (Color::Blue, Color::Blue) => (string_print : (string) -> unit)((int_to_string : (int) -> string)(2)),
      _ : (Color, Color) => (string_print : (string) -> unit)((int_to_string : (int) -> string)(3)),
  }
}