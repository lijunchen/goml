fn classify(x: int) -> string {
  if int_less(x, 0) {
    "negative"
  } else {
    if int_less(0, x) {
      "positive"
    } else {
      "zero"
    }
  }
}

fn triangle_type(a: int, b: int, c: int) -> string {
  if int_less(a, b) {
    if int_less(b, c) {
      "ascending"
    } else {
      "peak"
    }
  } else {
    if int_less(a, c) {
      "valley"
    } else {
      "flat"
    }
  }
}

fn main() {
  let first = classify(-42) in
  let second = classify(0) in
  let third = classify(17) in
  let shape1 = triangle_type(1, 2, 3) in
  let shape2 = triangle_type(3, 2, 1) in
  let shape3 = triangle_type(2, 3, 2) in
  let _ = string_println(first) in
  let _ = string_println(second) in
  let _ = string_println(third) in
  let _ = string_println(shape1) in
  let _ = string_println(shape2) in
  let _ = string_println(shape3) in
  ()
}
