impl ToString for int{
  fn to_string(self/0: int) -> string {
    (int_to_string : (int) -> string)((self/0 : int))
  }
}

impl ToString for bool{
  fn to_string(self/1: bool) -> string {
    (bool_to_string : (bool) -> string)((self/1 : bool))
  }
}

impl ToString for (int, int){
  fn to_string(self/2: (int, int)) -> string {
    "(?, ?)"
  }
}

fn main() -> unit {
  let x/3: int = 123 in
  let _ : unit = (string_println : (string) -> unit)((to_string : (int) -> string)((x/3 : int))) in
  let x/4: bool = true in
  let _ : unit = (string_println : (string) -> unit)((to_string : (bool) -> string)((x/4 : bool))) in
  let x/5: (int, int) = (3, 4) in
  let _ : unit = (string_println : (string) -> unit)((to_string : ((int, int)) -> string)((x/5 : (int, int)))) in
  ()
}