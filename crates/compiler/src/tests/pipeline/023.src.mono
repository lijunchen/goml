fn match_mixed_pair(pair/0: (int, string)) -> int {
  let x0 = pair/0.0 in
  let x1 = pair/0.1 in
  match x1 {
    "zero" => {
      match x0 {
        0 => {
          1
        },
        _ => 4,
      }
    },
    "one" => {
      match x0 {
        0 => {
          2
        },
        1 => {
          3
        },
        _ => 5,
      }
    },
    _ => match x0 {
      0 => {
        2
      },
      _ => 5,
    },
  }
}

fn match_mixed_enum(value/1: Mixed) -> int {
  match value/1 {
    Mixed::OnlyInt(x2) => {
      let x2 = Mixed::OnlyInt._0(value/1) in
      match x2 {
        0 => {
          6
        },
        _ => 7,
      }
    },
    Mixed::OnlyStr(x3) => {
      let x3 = Mixed::OnlyStr._0(value/1) in
      match x3 {
        "zero" => {
          8
        },
        _ => 9,
      }
    },
    Mixed::Both(x4, x5) => {
      let x4 = Mixed::Both._0(value/1) in
      let x5 = Mixed::Both._1(value/1) in
      match x5 {
        "zero" => {
          match x4 {
            0 => {
              10
            },
            _ => 12,
          }
        },
        _ => match x4 {
          0 => {
            11
          },
          _ => 13,
        },
      }
    },
  }
}

fn main() -> unit {
  let mtmp6 = string_println(int_to_string(match_mixed_pair((0, "zero")))) in
  let mtmp7 = string_println(int_to_string(match_mixed_pair((0, "other")))) in
  let mtmp8 = string_println(int_to_string(match_mixed_pair((1, "one")))) in
  let mtmp9 = string_println(int_to_string(match_mixed_pair((2, "zero")))) in
  let mtmp10 = string_println(int_to_string(match_mixed_pair((2, "two")))) in
  let mtmp11 = string_println(int_to_string(match_mixed_enum(Mixed::OnlyInt(0)))) in
  let mtmp12 = string_println(int_to_string(match_mixed_enum(Mixed::OnlyInt(5)))) in
  let mtmp13 = string_println(int_to_string(match_mixed_enum(Mixed::OnlyStr("zero")))) in
  let mtmp14 = string_println(int_to_string(match_mixed_enum(Mixed::OnlyStr("hello")))) in
  let mtmp15 = string_println(int_to_string(match_mixed_enum(Mixed::Both(0, "zero")))) in
  let mtmp16 = string_println(int_to_string(match_mixed_enum(Mixed::Both(0, "hello")))) in
  let mtmp17 = string_println(int_to_string(match_mixed_enum(Mixed::Both(2, "zero")))) in
  string_println(int_to_string(match_mixed_enum(Mixed::Both(3, "three"))))
}