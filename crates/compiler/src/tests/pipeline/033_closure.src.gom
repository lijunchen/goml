package main

import (
    "fmt"
)

func int_to_string(x int) string {
    return fmt.Sprintf("%d", x)
}

func int_add(x int, y int) int {
    return x + y
}

func int_mul(x int, y int) int {
    return x * y
}

func string_add(a string, b string) string {
    return a + b
}

func string_println(s string) struct{} {
    fmt.Println(s)
    return struct{}{}
}

type closure_env_f_0 struct {
    y_0 int
    z_1 int
}

type closure_env_add_base_1 struct {
    base_0 int
}

type closure_env_printer_2 struct {}

type closure_env_unused_3 struct {
    result_0 int
}

type closure_env_no_capture_4 struct {}

func test() struct{} {
    var ret21 struct{}
    var y__0 int = 3
    var z__1 int = 5
    var f__3 closure_env_f_0 = closure_env_f_0{
        y_0: y__0,
        z_1: z__1,
    }
    var t15 int = __closure_apply4(f__3, 2)
    var t14 string = int_to_string(t15)
    string_println(t14)
    var t17 int = __closure_apply4(f__3, 3)
    var t16 string = int_to_string(t17)
    ret21 = string_println(t16)
    return ret21
}

func main0() struct{} {
    var ret23 struct{}
    var base__6 int = 5
    var add_base__8 closure_env_add_base_1 = closure_env_add_base_1{
        base_0: base__6,
    }
    var result__9 int = __closure_apply6(add_base__8, 7)
    var printer__13 closure_env_printer_2 = closure_env_printer_2{}
    __closure_apply8(printer__13, "result: ", result__9)
    var no_capture__17 closure_env_no_capture_4 = closure_env_no_capture_4{}
    var doubled__18 int = __closure_apply12(no_capture__17, 3)
    var t18 string = int_to_string(doubled__18)
    string_println(t18)
    test()
    ret23 = struct{}{}
    return ret23
}

func __closure_apply4(env5 closure_env_f_0, x__2 int) int {
    var ret24 int
    var y__0 int = env5.y_0
    var z__1 int = env5.z_1
    var t19 int = int_mul(x__2, y__0)
    ret24 = int_mul(t19, z__1)
    return ret24
}

func __closure_apply6(env7 closure_env_add_base_1, x__7 int) int {
    var ret25 int
    var base__6 int = env7.base_0
    ret25 = int_add(x__7, base__6)
    return ret25
}

func __closure_apply8(env9 closure_env_printer_2, prefix__10 string, value__11 int) struct{} {
    var ret26 struct{}
    var t20 string = int_to_string(value__11)
    var message__12 string = string_add(prefix__10, t20)
    ret26 = string_println(message__12)
    return ret26
}

func __closure_apply12(env13 closure_env_no_capture_4, z__16 int) int {
    var ret28 int
    ret28 = int_mul(z__16, 2)
    return ret28
}

func main() {
    main0()
}
